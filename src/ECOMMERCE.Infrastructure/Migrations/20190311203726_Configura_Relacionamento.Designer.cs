// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using SGREFRI.Infrastructure.Data;

namespace ECOMMERCE.Infrastructure.Migrations
{
    [DbContext(typeof(GeneralContext))]
    [Migration("20190311203726_Configura_Relacionamento")]
    partial class Configura_Relacionamento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<int>("PessoaId");

                    b.HasKey("ClienteId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Contato", b =>
                {
                    b.Property<int>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmailId");

                    b.Property<int>("PessoaId");

                    b.Property<int>("TelefoneId");

                    b.HasKey("ContatoId");

                    b.HasIndex("EmailId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnderecoEmail")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("EmailId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.EmailPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmailId");

                    b.Property<int>("PessoaId");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.HasIndex("PessoaId");

                    b.ToTable("EmailPessoa");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar (200)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar (15)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar (200)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar (100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char (2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar (200)");

                    b.HasKey("EnderecoId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.EnderecoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EnderecoId");

                    b.Property<int>("PessoaId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("EnderecoPessoa");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Fisica", b =>
                {
                    b.Property<int>("FisicaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .IsUnicode(true);

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int>("PessoaId");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("varchar (15)");

                    b.HasKey("FisicaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Fisica");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Juridica", b =>
                {
                    b.Property<int>("JuridicaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataFundacao");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar (200)");

                    b.Property<int>("PessoaId");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("Varchar (200)");

                    b.HasKey("JuridicaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Juridica");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Operacao", b =>
                {
                    b.Property<int>("OperacaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("OperacaoId");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar (100)");

                    b.Property<int>("PessoaTipoId");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("PessoaId");

                    b.HasIndex("PessoaTipoId");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.PessoaTipo", b =>
                {
                    b.Property<int>("PessoaTipoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar (10)");

                    b.HasKey("PessoaTipoId");

                    b.ToTable("PessoaTipo");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Preco", b =>
                {
                    b.Property<int>("ProdutoId");

                    b.Property<int>("Id");

                    b.Property<decimal>("Precos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProdutoId");

                    b.ToTable("Preco");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Produto", b =>
                {
                    b.Property<int>("ProdutoId");

                    b.Property<DateTime>("DataFabricacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DataValidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProdutoTipoId");

                    b.HasKey("ProdutoId");

                    b.HasIndex("ProdutoTipoId")
                        .IsUnique();

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.ProdutoTipo", b =>
                {
                    b.Property<int>("ProdutoTipoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProdutoTipoId");

                    b.ToTable("ProdutoTipo");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Profissao", b =>
                {
                    b.Property<int>("ProfissaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CBO")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ProfissaoId");

                    b.ToTable("Profissao");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.ProfissaoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PessoaId");

                    b.Property<int>("ProfissaoId");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("ProfissaoId");

                    b.ToTable("ProfissaoPessoa");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("TelefoneTipoId");

                    b.HasKey("TelefoneId");

                    b.HasIndex("TelefoneTipoId")
                        .IsUnique();

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.TelefoneTipo", b =>
                {
                    b.Property<int>("TelefoneTipoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("TelefoneTipoId");

                    b.ToTable("TelefoneTipo");
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Cliente", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany("Clientes")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Contato", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Email", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany("Contatos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.EmailPessoa", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Email", "Email")
                        .WithMany("EmailsPessoas")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany("EmailsPessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.EnderecoPessoa", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Endereco", "Endereco")
                        .WithMany("EnderecosPessoas")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany("EnderecosPessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Fisica", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Juridica", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Pessoa", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.PessoaTipo", "PessoaTipo")
                        .WithMany("Pessoas")
                        .HasForeignKey("PessoaTipoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Produto", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Preco", "Preco")
                        .WithOne("Produto")
                        .HasForeignKey("SGREFRI.ApplicationCore.Entities.Produto", "ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SGREFRI.ApplicationCore.Entities.ProdutoTipo", "ProdutoTipo")
                        .WithOne("Produto")
                        .HasForeignKey("SGREFRI.ApplicationCore.Entities.Produto", "ProdutoTipoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.ProfissaoPessoa", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.Pessoa", "Pessoa")
                        .WithMany("ProfissaoPessoa")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGREFRI.ApplicationCore.Entities.Profissao", "Profissao")
                        .WithMany("ProfissaoPessoa")
                        .HasForeignKey("ProfissaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGREFRI.ApplicationCore.Entities.Telefone", b =>
                {
                    b.HasOne("SGREFRI.ApplicationCore.Entities.TelefoneTipo", "TelefoneTipo")
                        .WithOne("Telefone")
                        .HasForeignKey("SGREFRI.ApplicationCore.Entities.Telefone", "TelefoneTipoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
